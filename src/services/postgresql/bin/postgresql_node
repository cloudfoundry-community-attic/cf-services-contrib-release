#!/usr/bin/env ruby
# -*- mode: ruby -*-
# Copyright (c) 2009-2011 VMware, Inc.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile", __FILE__)
require 'bundler/setup'
require 'vcap_services_base'

$LOAD_PATH.unshift(File.expand_path("../../lib", __FILE__))
require "postgresql_service/node"

class VCAP::Services::Postgresql::NodeBin < VCAP::Services::Base::NodeBin

  def node_class
    VCAP::Services::Postgresql::Node
  end

  def default_config_file
    config_base_dir = ENV["CLOUD_FOUNDRY_CONFIG_PATH"] || File.join(File.dirname(__FILE__), '..', 'config')
    File.join(config_base_dir, 'postgresql_node.yml')
  end

  def additional_config(options, config)
    options[:max_db_size] = parse_property(config, "max_db_size", Numeric)
    options[:max_long_query] = parse_property(config, "max_long_query", Integer)
    options[:max_long_tx] = parse_property(config, "max_long_tx", Integer)
    options[:postgresql] = parse_property(config, "postgresql", Hash)
    options[:max_db_conns] = parse_property(config, "max_db_conns", Integer)
    options[:enable_xlog_enforcer] = parse_property(config, "enable_xlog_enforcer", Boolean, :optional => true, :default => false)
    options[:xlog_enforce_tolerance] = parse_property(config, "xlog_enforce_tolerance", Integer, :optional => true, :default => 5)
    options[:use_warden] = parse_property(config, "use_warden", Boolean, :optional => true, :default => false)
    options[:supported_versions] = parse_property(config, "supported_versions", Array)
    options[:default_version] = parse_property(config, "default_version", String)
    options[:sys_dbs] = parse_property(config, "sys_dbs", Array, :optional => true)
    options[:db_connect_timeout] = parse_property(config, "db_connect_timeout", Integer, :optional => true, :default => 3)
    options[:db_query_timeout] = parse_property(config, "db_query_timeout", Integer, :optional => true, :default => 10)
    options[:db_use_async_query] = parse_property(config, "db_use_async_query", Boolean, :optional => true, :default => true)
    if options[:use_warden] && options[:filesystem_quota] && options[:image_dir]
      warden_config = parse_property(config, "warden", Hash)
      options[:clean_image_cache] = parse_property(warden_config, "clean_image_cache", Boolean, :optional => true, :default => false)
      options[:clean_image_cache_interval] = parse_property(warden_config, "clean_image_cache_interval", Integer, :optional => true, :default => 3)
    end
    options
  end

end

VCAP::Services::Postgresql::NodeBin.new.start
